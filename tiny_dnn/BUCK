cxx_library(
    name="tiny_dnn",
    exported_headers=[
"config.h",
"node.h",
"nodes.h",
"network.h",
"core/params/gru_cell_params.h",
"core/params/global_avepool_params.h",
"core/params/maxpool_params.h",
"core/params/deconv_params.h",
"core/params/lstm_cell_params.h",
"core/params/fully_params.h",
"core/params/params.h",
"core/params/rnn_cell_params.h",
"core/params/conv_params.h",
"core/backend_avx.h",
"core/backend.h",
"core/kernels/conv2d_op_internal.h",
"core/kernels/fully_connected_grad_op.h",
"core/kernels/tiny_quantized_conv2d_kernel.h",
"core/kernels/nnp_deconv2d_kernel.h",
"core/kernels/tiny_deconv2d_back_kernel.h",
"core/kernels/conv2d_op_avx.h",
"core/kernels/tiny_quantized_deconv2d_kernel.h",
"core/kernels/maxpool_grad_op.h",
"core/kernels/tiny_quantized_matmul_kernel.h",
"core/kernels/maxpool_op_avx.h",
"core/kernels/tiny_quantization_kernel.h",
"core/kernels/lstm_cell_op_internal.h",
"core/kernels/gru_cell_grad_op.h",
"core/kernels/rnn_cell_grad_op.h",
"core/kernels/gru_cell_op_internal.h",
"core/kernels/conv2d_op_nnpack.h",
"core/kernels/avx_kernel_common.h",
"core/kernels/gru_cell_op.h",
"core/kernels/global_avepool_op_avx.h",
"core/kernels/fully_connected_op.h",
"core/kernels/conv2d_op.h",
"core/kernels/rnn_cell_op_internal.h",
"core/kernels/lstm_cell_grad_op.h",
"core/kernels/tiny_deconv2d_kernel.h",
"core/kernels/rnn_cell_op.h",
"core/kernels/fully_connected_op_avx.h",
"core/kernels/conv2d_grad_op.h",
"core/kernels/fully_connected_op_internal.h",
"core/kernels/maxpool_op_nnpack.h",
"core/kernels/global_avepool_op.h",
"core/kernels/conv2d_grad_op_avx.h",
"core/kernels/conv2d_op_opencl.h",
"core/kernels/avx_deconv2d_back_kernel.h",
"core/kernels/fully_connected_op_nnpack.h",
"core/kernels/tiny_quantized_fully_connected_kernel.h",
"core/kernels/maxpool_op_internal.h",
"core/kernels/conv2d_op_libdnn.h",
"core/kernels/global_avepool_grad_op.h",
"core/kernels/maxpool_op.h",
"core/kernels/global_avepool_op_internal.h",
"core/kernels/avx_deconv2d_kernel.h",
"core/kernels/lstm_cell_op.h",
"core/framework/device.h",
"core/framework/program_manager.h",
"core/framework/op_kernel.h",
"core/framework/tensor.h",
"core/framework/program.h",
"core/framework/device.fwd.h",
"core/framework/tensor_utils.h",
"core/backend_tiny.h",
"core/session.h",
"optimizers/optimizer.h",
"layers/power_layer.h",
"layers/average_pooling_layer.h",
"layers/rnn_cell.h",
"layers/quantized_convolutional_layer.h",
"layers/linear_layer.h",
"layers/global_average_pooling_layer.h",
"layers/partial_connected_layer.h",
"layers/cell.h",
"layers/gru_cell.h",
"layers/lrn_layer.h",
"layers/slice_layer.h",
"layers/input_layer.h",
"layers/batch_normalization_layer.h",
"layers/convolutional_layer.h",
"layers/layers.h",
"layers/lstm_cell.h",
"layers/quantized_fully_connected_layer.h",
"layers/fully_connected_layer.h",
"layers/layer.h",
"layers/cells.h",
"layers/max_unpooling_layer.h",
"layers/recurrent_layer.h",
"layers/average_unpooling_layer.h",
"layers/arithmetic_layer.h",
"layers/quantized_deconvolutional_layer.h",
"layers/dropout_layer.h",
"layers/concat_layer.h",
"layers/deconvolutional_layer.h",
"layers/max_pooling_layer.h",
"models/alexnet.h",
"util/nn_error.h",
"util/serialization_helper.h",
"util/random.h",
"util/product.h",
"util/colored_print.h",
"util/macro.h",
"util/graph_visualizer.h",
"util/util.h",
"util/serialization_layer_list.h",
"util/math_functions.h",
"util/weight_init.h",
"util/target_cost.h",
"util/gradient_check.h",
"util/parallel_for.h",
"util/deform.h",
"util/serialization_functions.h",
"util/deserialization_helper.h",
"util/aligned_allocator.h",
"tiny_dnn.h",
"lossfunctions/loss_function.h",
"activations/leaky_relu_layer.h",
"activations/softmax_layer.h",
"activations/elu_layer.h",
"activations/activation_layer.h",
"activations/tanh_layer.h",
"activations/relu_layer.h",
"activations/sigmoid_layer.h",
"activations/tanh_p1m2_layer.h",
"activations/softplus_layer.h",
"activations/softsign_layer.h",
"activations/selu_layer.h",
"xtensor/xtensor_forward.hpp",
"xtensor/xview_utils.hpp",
"xtensor/xslice.hpp",
"xtensor/xview.hpp",
"xtensor/xmissing.hpp",
"xtensor/xbuffer_adaptor.hpp",
"xtensor/xoffsetview.hpp",
"xtensor/xadapt.hpp",
"xtensor/xfunctorview.hpp",
"xtensor/xindexview.hpp",
"xtensor/xtensor_config.hpp",
"xtensor/xnoalias.hpp",
"xtensor/xbuilder.hpp",
"xtensor/xiterable.hpp",
"xtensor/xaxis_iterator.hpp",
"xtensor/xvectorize.hpp",
"xtensor/xutils.hpp",
"xtensor/xarray.hpp",
"xtensor/xrandom.hpp",
"xtensor/xexception.hpp",
"xtensor/xassign.hpp",
"xtensor/xinfo.hpp",
"xtensor/xtensor.hpp",
"xtensor/xoperation.hpp",
"xtensor/xstrides.hpp",
"xtensor/xreducer.hpp",
"xtensor/xcomplex.hpp",
"xtensor/xstorage.hpp",
"xtensor/xstridedview.hpp",
"xtensor/xlayout.hpp",
"xtensor/xio.hpp",
"xtensor/xscalar.hpp",
"xtensor/xeval.hpp",
"xtensor/xcsv.hpp",
"xtensor/xmath.hpp",
"xtensor/xsemantic.hpp",
"xtensor/xbroadcast.hpp",
"xtensor/xiterator.hpp",
"xtensor/xexpression.hpp",
"xtensor/xcontainer.hpp",
"xtensor/xoptional.hpp",
"xtensor/xfunction.hpp",
"xtensor/xgenerator.hpp",
    ],
    deps=[
        "//tiny_dnn/cereal:cereal",
    ],
    visibility=[
        "PUBLIC",
    ],
)

cxx_library(
    name="tiny_dnn_io",
    exported_headers=[
"io/cifar10_parser.h",
"io/mnist_parser.h",
"io/layer_factory.h",
"io/caffe/layer_factory.h",
"io/caffe/layer_factory_impl.h",
"io/display.h",
"util/image.h",
    ],
    deps=[
        "//tiny_dnn/cereal:cereal",
    ],
    visibility=[
        "PUBLIC",
    ],
)
